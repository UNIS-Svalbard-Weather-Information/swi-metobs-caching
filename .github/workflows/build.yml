name: Build Docker on prereleased
on:
  release:
    types:
      - prereleased
      - released
      - published

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Determine release type
        id: release_type
        run: |
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
            echo "TAG_SUFFIX=-beta" >> $GITHUB_ENV
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
            echo "TAG_SUFFIX=" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Check if latest release
        id: check_latest
        run: |
          LATEST_RELEASE=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/releases/latest)
          if [[ "${{ github.event.release.id }}" == $(echo $LATEST_RELEASE | jq -r '.id') ]]; then
            echo "IS_LATEST=true" >> $GITHUB_ENV
          else
            echo "IS_LATEST=false" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Update version file with release tag
        run: |
          sed -i "2s/.*/${{ github.event.release.tag_name }}/" version

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            lpauchet/swi-server:${{ github.event.release.tag_name }}${{ env.TAG_SUFFIX }}
            ${{ env.IS_LATEST == 'true' && env.IS_PRERELEASE == 'false' && 'lpauchet/swi-server:latest' }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description="Pre-release image, not production-ready"
